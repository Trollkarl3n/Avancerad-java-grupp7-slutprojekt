Index: src/main/java/com/DiscordBot/commands/CommandManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.DiscordBot.commands;\r\n\r\nimport net.dv8tion.jda.api.entities.Guild;\r\nimport net.dv8tion.jda.api.events.interaction.command.SlashCommandInteractionEvent;\r\nimport net.dv8tion.jda.api.events.session.ReadyEvent;\r\nimport net.dv8tion.jda.api.hooks.ListenerAdapter;\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class CommandManager extends ListenerAdapter {\r\n\r\n    private List<ICommand> commands = new ArrayList<>();\r\n\r\n    @Override\r\n    public void onReady(@NotNull ReadyEvent event) {\r\n        for(Guild guild : event.getJDA().getGuilds()) {\r\n            for(ICommand command : commands) {\r\n                guild.upsertCommand(command.getName(), command.getDescription()).addOptions(command.getOptions()).queue();\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onSlashCommandInteraction(SlashCommandInteractionEvent event) {\r\n        for(ICommand command : commands){\r\n            if(command.getName().equals(event.getName())){\r\n                command.execute(event);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    public void add(ICommand command) {\r\n        commands.add(command);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/DiscordBot/commands/CommandManager.java b/src/main/java/com/DiscordBot/commands/CommandManager.java
--- a/src/main/java/com/DiscordBot/commands/CommandManager.java	(revision 05cf9c31c6aae970ce80771aadbc2229908b9377)
+++ b/src/main/java/com/DiscordBot/commands/CommandManager.java	(date 1702561339324)
@@ -16,8 +16,14 @@
     @Override
     public void onReady(@NotNull ReadyEvent event) {
         for(Guild guild : event.getJDA().getGuilds()) {
+
             for(ICommand command : commands) {
-                guild.upsertCommand(command.getName(), command.getDescription()).addOptions(command.getOptions()).queue();
+                if(command.getOptions() == null) {
+                    guild.upsertCommand(command.getName(), command.getDescription()).queue();
+                } else {
+                    guild.upsertCommand(command.getName(), command.getDescription()).addOptions(command.getOptions()).queue();
+                }
+
 
             }
         }
Index: src/main/java/com/DiscordBot/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.DiscordBot;\r\n\r\nimport com.DiscordBot.commands.CommandManager;\r\nimport com.DiscordBot.commands.Sum;\r\nimport net.dv8tion.jda.api.JDA;\r\nimport net.dv8tion.jda.api.JDABuilder;\r\n\r\npublic class Main {\r\n    public static void main (String[] args){\r\n        JDA jda = JDABuilder.createDefault(\"MTE4NDQyMDY2MjQ3NjAzNDA0OA.GQAPVl.uvILNGUzO8QphbBED2z_tKuppWe1hd3D2zjIfk\").build();\r\n        jda.addEventListener(new Listeners());\r\n        //jda.addEventListener(new Sum());\r\n        CommandManager manager = new CommandManager();\r\n        manager.add(new Sum());\r\n        jda.addEventListener(manager);\r\n\r\n        /*\r\n            Global commands - Can be used anywere dms etc (Takes long time to register hour+)\r\n            Guild commands - Can only be used in sertain guilds (Servers)\r\n         */\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/DiscordBot/Main.java b/src/main/java/com/DiscordBot/Main.java
--- a/src/main/java/com/DiscordBot/Main.java	(revision 05cf9c31c6aae970ce80771aadbc2229908b9377)
+++ b/src/main/java/com/DiscordBot/Main.java	(date 1702559438540)
@@ -1,6 +1,7 @@
 package com.DiscordBot;
 
 import com.DiscordBot.commands.CommandManager;
+import com.DiscordBot.commands.Embed;
 import com.DiscordBot.commands.Sum;
 import net.dv8tion.jda.api.JDA;
 import net.dv8tion.jda.api.JDABuilder;
@@ -12,6 +13,7 @@
         //jda.addEventListener(new Sum());
         CommandManager manager = new CommandManager();
         manager.add(new Sum());
+        manager.add(new Embed());
         jda.addEventListener(manager);
 
         /*
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"0e62379f-5d47-4a23-8183-4857b478a90b\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/com/DiscordBot/commands/CommandManager.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/com/DiscordBot/commands/ICommand.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/DiscordBot/Listeners.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/DiscordBot/Listeners.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/DiscordBot/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/DiscordBot/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/DiscordBot/commands/Sum.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/DiscordBot/commands/Sum.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n        <option value=\"Interface\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ZTo6UjL0Q677re1n8Z6n5EvgSB\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.ide.settings.new.ui&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"0e62379f-5d47-4a23-8183-4857b478a90b\" name=\"Changes\" comment=\"\" />\r\n      <created>1702455257017</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702455257017</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.IllegalStateException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 05cf9c31c6aae970ce80771aadbc2229908b9377)
+++ b/.idea/workspace.xml	(date 1702563197837)
@@ -5,12 +5,11 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="0e62379f-5d47-4a23-8183-4857b478a90b" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/src/main/java/com/DiscordBot/commands/CommandManager.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/com/DiscordBot/commands/ICommand.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/DiscordBot/commands/Buttons.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/DiscordBot/commands/Embed.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/DiscordBot/Listeners.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/DiscordBot/Listeners.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/DiscordBot/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/DiscordBot/Main.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/DiscordBot/commands/Sum.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/DiscordBot/commands/Sum.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/DiscordBot/commands/CommandManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/DiscordBot/commands/CommandManager.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -25,8 +24,8 @@
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
       <list>
-        <option value="Class" />
         <option value="Interface" />
+        <option value="Class" />
       </list>
     </option>
   </component>
@@ -34,7 +33,7 @@
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="ProblemsViewState">
-    <option name="selectedTabId" value="CurrentFile" />
+    <option name="selectedTabId" value="ProjectErrors" />
   </component>
   <component name="ProjectColorInfo">{
   &quot;associatedIndex&quot;: 1
Index: src/main/java/com/DiscordBot/commands/Embed.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/DiscordBot/commands/Embed.java b/src/main/java/com/DiscordBot/commands/Embed.java
new file mode 100644
--- /dev/null	(date 1702561845373)
+++ b/src/main/java/com/DiscordBot/commands/Embed.java	(date 1702561845373)
@@ -0,0 +1,43 @@
+package com.DiscordBot.commands;
+
+
+import net.dv8tion.jda.api.EmbedBuilder;
+import net.dv8tion.jda.api.events.interaction.command.SlashCommandInteractionEvent;
+import net.dv8tion.jda.api.interactions.commands.build.OptionData;
+
+import java.awt.*;
+import java.util.List;
+
+public class Embed implements ICommand {
+
+
+    @Override
+    public String getName() {
+        return "embed";
+    }
+
+    @Override
+    public String getDescription() {
+        return "Send embed";
+    }
+
+    @Override
+    public List<OptionData> getOptions() {
+        return null;
+    }
+
+    @Override
+    public void execute(SlashCommandInteractionEvent event) {
+        EmbedBuilder builder = new EmbedBuilder();
+        builder.setTitle("Embed");
+
+        builder.setDescription("Example embed");
+        builder.addField("Field 1", "Value", false);
+        builder.addField("Field 2", "Value", false);
+        builder.addField("Field 3", "Value", false);
+        builder.setFooter("Author: Neil & Eric");
+        builder.setColor(Color.CYAN);
+        event.replyEmbeds(builder.build()).queue();
+
+    }
+}
